// Code generated by MockGen. DO NOT EDIT.
// Source: cache_rules_config.go
//
// Generated by this command:
//
//	mockgen -package=mock -source=cache_rules_config.go -destination=mock/cache_rules_config.go
//

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"
	time "time"

	gomock "go.uber.org/mock/gomock"
)

// MockCacheRulesConfig is a mock of CacheRulesConfig interface.
type MockCacheRulesConfig struct {
	ctrl     *gomock.Controller
	recorder *MockCacheRulesConfigMockRecorder
	isgomock struct{}
}

// MockCacheRulesConfigMockRecorder is the mock recorder for MockCacheRulesConfig.
type MockCacheRulesConfigMockRecorder struct {
	mock *MockCacheRulesConfig
}

// NewMockCacheRulesConfig creates a new mock instance.
func NewMockCacheRulesConfig(ctrl *gomock.Controller) *MockCacheRulesConfig {
	mock := &MockCacheRulesConfig{ctrl: ctrl}
	mock.recorder = &MockCacheRulesConfigMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCacheRulesConfig) EXPECT() *MockCacheRulesConfigMockRecorder {
	return m.recorder
}

// GetTtlForKey mocks base method.
func (m *MockCacheRulesConfig) GetTtlForKey(chain, network, key string) time.Duration {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTtlForKey", chain, network, key)
	ret0, _ := ret[0].(time.Duration)
	return ret0
}

// GetTtlForKey indicates an expected call of GetTtlForKey.
func (mr *MockCacheRulesConfigMockRecorder) GetTtlForKey(chain, network, key any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTtlForKey", reflect.TypeOf((*MockCacheRulesConfig)(nil).GetTtlForKey), chain, network, key)
}
