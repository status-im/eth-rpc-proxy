services:
  rpc-proxy:
    build:
      context: './nginx-proxy'
    container_name: 'rpc-proxy'
    restart: 'always'
    environment:
      CONFIG_HEALTH_CHECKER_URL: 'http://health-checker:8082/providers'
      CUSTOM_DNS: '127.0.0.11'
      RELOAD_INTERVAL: '10'
      AUTH_CONFIG_FILE: '/app/config.json'
    ports:
      - '8080:8080'
    networks:
      - 'rpc-network'
    depends_on:
      - 'health-checker'
      - 'go-auth-service'
    volumes:
      - './secrets/default_providers.json:/usr/local/openresty/nginx/providers.json'
      - './secrets/.htpasswd:/etc/nginx/.htpasswd'
      - './go-auth-service/config.json:/app/config.json:ro'

  go-auth-service:
    build:
      context: './go-auth-service'
      dockerfile: Dockerfile
    container_name: 'go-auth-service'
    restart: 'always'
    environment:
      CONFIG_FILE: '/app/config.json'
      PORT: '8081'
    ports:
      - '8081:8081'
    networks:
      - 'rpc-network'
    volumes:
      - './go-auth-service/config.json:/app/config.json:ro'

  health-checker:
    build:
      context: './rpc-health-checker'
    container_name: 'health-checker'
    restart: 'always'
    environment:
      DEFAULT_PROVIDERS_PATH: '/config/default_providers.json'
      REFERENCE_PROVIDERS_PATH: '/config/reference_providers.json'
      PORT: '8082'
    ports:
      - '8082:8082'
    networks:
      - 'rpc-network'
    volumes:
      - './secrets:/config'

  rpc-proxy-metrics:
    image: 'nginx/nginx-prometheus-exporter:1.4'
    container_name: 'rpc-proxy-metrics'
    restart: 'always'
    command: 
      - '--nginx.scrape-uri=http://rpc-proxy:8080/stub_status'
      - '--web.listen-address=:8090'
    ports:
      - '8090:8090'
    networks:
      - 'rpc-network'

  prometheus:
    image: 'prom/prometheus:latest'
    container_name: 'prometheus'
    restart: 'always'
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - '9090:9090'
    networks:
      - 'rpc-network'
    volumes:
      - './prometheus.yml:/etc/prometheus/prometheus.yml'
    depends_on:
      - 'health-checker'

  grafana:
    image: 'grafana/grafana:latest'
    container_name: 'grafana'
    restart: 'always'
    ports:
      - '3000:3000'
    environment:
      GF_SECURITY_ADMIN_PASSWORD: 'admin'
    networks:
      - 'rpc-network'
    volumes:
      - 'grafana-storage:/var/lib/grafana'
      - './grafana/provisioning/datasources:/etc/grafana/provisioning/datasources'
      - './grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards'
    depends_on:
      - 'prometheus'

volumes:
  grafana-storage:

networks:
  rpc-network:
    driver: bridge
